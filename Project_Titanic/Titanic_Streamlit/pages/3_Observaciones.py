#--------------LIBRER칈AS--------------#
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import plotly.graph_objects as go
import plotly.express as px
from plotly.subplots import make_subplots
from sklearn.preprocessing import LabelEncoder
from sklearn.preprocessing import OneHotEncoder, StandardScaler
from sklearn.model_selection import train_test_split, cross_val_score
from sklearn.neighbors import KNeighborsRegressor
from sklearn.metrics import mean_squared_error
from scipy.stats import skew
import re
import requests
from bs4 import BeautifulSoup
import streamlit as st
from PIL import Image
#--------------LIBRER칈AS--------------#



st.set_page_config(page_title='Observaciones', page_icon='游댧', layout='wide')
st.set_option('deprecation.showPyplotGlobalUse', False)

titanic = pd.read_csv(r"E:\COPIA_DAWN\DAWN\CURSOSYLIBROS\Data\Upgrade Hub Data Analytics Bootcamp\Tareas\Module1_0_SoftSkillsProyecto\Notebooks_ejercicios\Titanic_Streamlit\data\preprocesado.csv")

st.title('Observaciones')

image1 = Image.open(r'E:\COPIA_DAWN\DAWN\CURSOSYLIBROS\Data\Upgrade Hub Data Analytics Bootcamp\Tareas\Module1_0_SoftSkillsProyecto\Notebooks_ejercicios\Titanic_Streamlit\img\logo.png')
st.sidebar.image(image1)



#--------------Observaciones preliminares de datos num칠ricos--------------#
st.markdown(
            """
            ## Observaciones preliminares de datos num칠ricos
        """
        )
st.markdown(
            """
Se utiliza la funci칩n ``.describe()`` en los datos num칠ricos del dataset para ver el n칰mero total de datos, la media, la desviaci칩n est치ndar, el m치ximo, el m칤nimo y los cuartiles.
        """
        )
st.write(titanic.describe().T)
st.markdown(
            """
De estos datos se observa que la edad m칤nima es 0 a침os, indicando la presencia de reci칠n nacidos dentro del barco. La edad m치xima era de 80 a침os, lo cu치l nos dice que hab칤a personas de todas las edades a bordo. Y, por 칰ltimo, la mediana es de 28 a침os y la media es de casi 30 a침os, por lo que la cercan칤a entre ambas indicar칤a simetr칤a en la distribuci칩n de los datos de edad.

En esta tabla tambi칠n podemos extraer informaci칩n relevante de la columna Fare, en la cu치l se puede observar una diferencia muy grande entre la mediana, la media y el valor m치ximo pagado por billete. Esta distribuci칩n desigual de los datos indica que los pasajeros de primera clase pagaron una cantidad muy alta en comparaci칩n con el resto de pasajeros, lo cu치l tambi칠n puede suponer la presencia de valores at칤picos dentro de la distribuci칩n.
        """
        )
#--------------Observaciones preliminares de datos num칠ricos--------------#



#--------------Distribuci칩n de la edad en el barco--------------#
st.markdown(
            """
            ## Distribuci칩n de la edad en el barco
        """
        )
st.markdown(
            """
Procedimiento:
* Primero, se ha realizado un histograma que refleja el n칰mero de pasajeros en funci칩n de la edad.
* En la siguiente gr치fica, se ha obtenido el n칰mero de personas por edad, divididas seg칰n la clase, gr치cias a una gr치fica de dispersi칩n.
* Para determinar datos de inter칠s entre las diferentes clases y la esperanza de vida de la 칠poca, se ha hecho uso de p치ginas externas que han permitido una mejor comprensi칩n de los datos.
        """
        )
col1,col2 =st.columns(2)
with col1:
    fig=px.histogram(x=titanic['Age'])
    fig.update_layout(height=500, width=500, title_text="Distribuci칩n de la Edad", 
                  xaxis=dict(title="Edad"), yaxis=dict(title="N칰mero de pasajeros"), template='plotly_dark')
    st.plotly_chart(fig)
    st.markdown(
            """
En la gr치fica se puede ver que el mayor n칰mero de pasajeros se encuentran entre las edades que van de 18 a 35 a침os, siendo las edades m치s comunes entre pasajeros las que van de 24 a 25 a침os. Si se compara esta gr치fica con la obtenida en el apartado de valores nulos, veremos que se ha conseguido mantener la distribuci칩n de edades en su mayor칤a, sin cambios significativos. Debido a que el porcentaje de valores nulos era casi del 20%, se previ칩 que iba a tener un impacto considerable sobre la distribuci칩n de los datos, por lo que se opt칩 por el algoritmo KNN, lo cu치l permitir칤a encontrar relaciones entre los datos y obtener unas edades m치s ajustadas, impactando lo menos posible dicha distribuci칩n.

        """
        )

with col2:
    edad_clases=titanic.groupby('Pclass')['Age'].value_counts().reset_index()
    edad_clases.columns=['Pclass','Age', 'count']
    fig1 = px.strip(edad_clases, x="Age", y="count", template="plotly_dark", color='Pclass')

    fig1.update_layout(
    title='Distribuci칩n de edades por clase',
    xaxis=dict(title='Edad'),
    yaxis=dict(title='N칰mero de pasajeros')
)

    st.plotly_chart(fig1)

    st.markdown(
            """
Seguidamente, se observa la distribuci칩n de las edades por clase dentro del barco. Se puede ver que la mayor칤a de pasajeros entre 19 y 38 a침os pertenec칤an a tercera clase. Si nos fijamos en los extremos, la mayor칤a de ni침os e infantes pertenec칤an a la tercera clase, mientras que por encima de 42 a침os, hay un mayor n칰mero de pasajeros en primera clase. Por otro lado, los pasajeros de segunda clase se distribuyen de una forma m치s uniforme a lo largo del rango de edades.

La esperanza de vida en Inglaterra alrededor de 1912 estaba situada en 52 a침os para los hombres y 55 a침os para las mujeres, esto puede implicar, en apoyo de los datos mostrados en la gr치fica que la vida pausada de la gente de clase alta de la 칠poca les permit칤an vivir muchos m치s a침os y tener mucha m치s actividad de ocio, en comparaci칩n con la gente de clase baja, expuesta a m치s enfermedades, trabajos laboriosos y que viajaban por necesidad, ya sea por encontrar una vida mejor o por la b칰squeda de un trabajo.

Info: https://www.ons.gov.uk/peoplepopulationandcommunity/birthsdeathsandmarriages/lifeexpectancies/articles/howhaslifeexpectancychangedovertime/2015-09-09

Info: https://localhistories.org/life-in-1912/
        """
        )
#--------------Distribuci칩n de la edad en el barco--------------#



#--------------Distribuci칩n precio de billete--------------#
st.markdown(
            """
            ## Distribuci칩n precio de billete
        """
        )
st.markdown(
            """
Procedimiento:
* En la gr치fica se ha realizado un histograma que refleja el precio del billete y cu치ntas personas pagaron por 칠l.
        """
        )
fig2=px.histogram(x=titanic['Fare'])
fig2.update_layout(height=500, width=500, title_text="Distribuci칩n del precio del billete", 
                  xaxis=dict(title="Precio"), yaxis=dict(title="N칰mero de pasajeros que han pagado"), template='plotly_dark')
st.plotly_chart(fig2)
st.markdown(
            """
En la gr치fica se puede ver que la mayor칤a de pasajeros pagaron entre 5 y 15 libras por billete, lo cu치l asocia este precio a los pasajeros de tercera clase, mientras que aquellos pasajeros en primera clase, cuyo porcentaje ser치 menor, pagar칤an precios mucho m치s altos en funci칩n del nivel de camarote en el que se encontrasen, dando lugar a valores que pueden ser reconocidos como valores at칤picos, como en el caso del valor m치ximo.
        """
        )
#--------------Distribuci칩n precio de billete--------------#



#--------------Porcentaje de pasajeros seg칰n la clase--------------#
st.markdown(
            """
            ## Porcentaje de pasajeros seg칰n la clase
        """
        )
st.markdown(
            """
Procedimiento:
* Se ha utilizado un gr치fico circular para ver el porcentaje de pasajeros dentro de cada clase.
        """
        )
pct_pasajeros_1 = (len(titanic[titanic['Pclass']==1])*100)/titanic.shape[0]
pct_pasajeros_2 = (len(titanic[titanic['Pclass']==2])*100)/titanic.shape[0]
pct_pasajeros_3 = (len(titanic[titanic['Pclass']==3])*100)/titanic.shape[0]

fig3 = px.pie(labels=['Primera Clase','Segunda Clase', 'Tercera Clase'], 
             values=[pct_pasajeros_1,pct_pasajeros_2,pct_pasajeros_3],
             names=['Primera Clase','Segunda Clase', 'Tercera Clase'],
             color=['Primera Clase','Segunda Clase', 'Tercera Clase'],
             template='plotly_dark')

fig3.update_layout(
    title='Porcentaje de pasajeros dentro de cada clase')

st.plotly_chart(fig3)
st.markdown(
            """
En esta gr치fica se confirma que la mayor칤a de pasajeros estaban alojados en tercera clase, lo cu치l explica por qu칠 la distribuci칩n del precio de los billetes est치 sesgada hacia precios m치s bajos. Por otro lado, se puede apreciar que hay casi un 4% m치s de pasajeros en primera clase que en segunda clase, lo cu치l se puede asociar a la libertad que ten칤a la clase alta, gracias a su econom칤a, para realizar viajes de ocio, en comparaci칩n con la clase media.
        """
        )
#--------------Porcentaje de pasajeros seg칰n la clase--------------#



#--------------Porcentaje de pasajeros seg칰n la clase--------------#
st.markdown(
            """
            ## Distribuci칩n por precio de billete, clase y nivel del barco
        """
        )
st.markdown(
            """
Procedimiento:
* Se han dividido los precios del billete en 10 grupos de precio.
* Estos se han utilizado para agrupar la clase de los pasajeros y los niveles en funci칩n de los mismos, obteniendo una tabla y s칩lo visualizando aquellos donde el n칰mero de pasajeros es mayor que cero.
* A trav칠s de un procedimiento de WebScrapping se ha conseguido una tabla donde se listan los diferentes camarotes de lujo dentro del barco.
* Se ha utilizado una web externa para entender mejor la distribuci칩n de los camarotes por clases y por niveles dentro del barco.
        """
        )
col1,col2 =st.columns(2)
with col1:
    rango_precios=pd.cut(titanic['Fare'], 10)
    distribucion=titanic.groupby(rango_precios)[['Pclass','Level']].value_counts().reset_index()
    st.write(distribucion[distribucion['count']>0].reset_index())

with col2:
    enlace = "https://es.wikipedia.org/wiki/Instalaciones_de_primera_clase_del_RMS_Titanic"
    texto_web = requests.get(enlace).text
    sopa = BeautifulSoup(texto_web, 'html5')
    sopa.prettify()
    camarote_lujo = sopa.find_all('table', class_= 'wikitable')
    camarotes = camarote_lujo[0]
    dataframe_camarotes = pd.read_html(str(camarotes),header=0)[0]
    st.write(dataframe_camarotes)

st.markdown(
            """
En la tabla se puede comprobar que los niveles que alojaban m치s gente eran los niveles ``C``, ``E`` y ``G``, los cuales se tomaron como la moda en apartados anteriores, lo cu치l tambi칠n ha influ칤do en la distribuci칩n de pasajeros por niveles. Los precios m치s altos estaban reservados para los niveles ``C`` y ``B``, donde se encontraban las cabinas m치s lujosas del barco, listadas en la tabla dataframe_camarotes. Para los dem치s niveles, los rangos de precios var칤an e,igualmente, el n칰mero de personas que pagaron por ellos. Se observa que diferentes niveles estaban est치n tambi칠n en diferentes clases, lo cu치l se debe a que seg칰n el nivel, tambi칠n pod칤as encontrar habitaciones de primera, segunda o tercera clase. Para primera clase, los camarotes iban de los niveles ``A`` a ``E``. Para la segunda clase, los camarotes ofrecidos iban de los niveles ``B`` a ``F``. Mientras que para la tercera clase, sus habitaciones iban de los niveles ``D`` a ``G``. De esta manera, la diferencia de precios que hay entre niveles hace referencia a las diferentes habitaciones que hab칤a por clase y por nivel. Finalmente, tambi칠n se encuentra un valor at칤pico en los niveles, el nivel ``T``, en el cual s칩lo hay constancia de que una persona pag칩 por 칠l y no se han podido encontrar m치s referencias acerca de 칠l.

Info: https://rmstitanic1912.weebly.com/the-levels-of-the-titanic.html
        """
        )
#--------------Porcentaje de pasajeros seg칰n la clase--------------#



#--------------Pasajeros que embarcaron seg칰n el g칠nero--------------#
st.markdown(
            """
            ## Pasajeros que embarcaron seg칰n el g칠nero
        """
        )
st.markdown(
            """
Procedimiento:
* Se han agrupado los pasajeros por g칠nero y se muestran junto al total de pasajeros.
* Se han dividido los pasajeros agrupados por g칠nero seg칰n la clase.
* Se han dividido los pasajeros agrupados por g칠nero seg칰n el puerto de embarque.
        """
        )
col1,col2 =st.columns(2)
with col1:
    genero=titanic.groupby('Sex')['Sex'].value_counts().reset_index()
    genero.loc[2,['Sex','count']]=['Total',titanic['Sex'].count()]
    fig4=px.histogram(genero, x="Sex", y="count", color="Sex",labels={'Sex':'G칠nero','count':'N칰mero de Pasajeros'})
    fig4.update_layout(height=500, width=800, title_text="Distribuci칩n de pasajeros", 
                  template='plotly_dark')
    st.plotly_chart(fig4)

with col2:
    clase_genero=titanic.groupby('Sex')['Pclass'].value_counts().reset_index()
    total_clase=titanic.groupby('Pclass')['Pclass'].value_counts().reset_index()
    clase_genero.loc[6,['Sex','Pclass','count']]=['Total',1,total_clase.loc[0,'count']]
    clase_genero.loc[7,['Sex','Pclass','count']]=['Total',2,total_clase.loc[1,'count']]
    clase_genero.loc[8,['Sex','Pclass','count']]=['Total',3,total_clase.loc[2,'count']]

    fig5=px.histogram(clase_genero, x="Pclass", y="count", color="Sex", nbins=3, barmode='group',labels={'Pclass':'Clase', 'count':'N칰mero de Pasajeros'})

    fig5.update_layout(height=500, width=800, title_text="Distribuci칩n de pasajeros", 
                  template='plotly_dark')
    st.plotly_chart(fig5)

col3,col4,col5 =st.columns(3)
with col4:
    puerto_genero=titanic.groupby('Sex')['Embarked'].value_counts().reset_index()
    total_puerto=titanic.groupby('Embarked')['Embarked'].count()
    puerto_genero.loc[6,['Sex','Embarked','count']]=['Total','S',total_puerto.iloc[2]]
    puerto_genero.loc[7,['Sex','Embarked','count']]=['Total','C',total_puerto.iloc[0]]
    puerto_genero.loc[8,['Sex','Embarked','count']]=['Total','Q',total_puerto.iloc[1]]
    fig6=px.histogram(puerto_genero, x="Embarked", y="count", color="Sex", 
                  labels= {'Embarked': 'Puerto','count':'N칰mero de Pasajeros'}, nbins=3, barmode='group',template='plotly_dark')
    fig6.update_layout(height=500, width=800, title_text="Distribuci칩n de pasajeros")
    st.plotly_chart(fig6)

st.markdown(
            """
De las gr치ficas mostradas se pueden sacar los siguientes datos significativos:
* El ``65%`` de pasajeros eran de g칠nero masculino.
* La tercera clase era la que m치s pasajeros albergaba, con un ``55%`` de la poblaci칩n total.
* Finalmente, el puerto m치s popular entre los pasajeros era Southampton, desde el cu치l embarcaron m치s del ``72%`` de los pasajeros.
        """
        )
#--------------Pasajeros que embarcaron seg칰n el g칠nero--------------#



#--------------N칰mero de pasajeros en funci칩n de la edad--------------#
st.markdown(
            """
            ## N칰mero de pasajeros en funci칩n de la edad
        """
        )
st.markdown(
            """
Procedimiento:
* Se ha creado una columna nueva que se llama ``Pasajero``.
* Dentro de esa columna van a estar presentes tres variables categ칩ricas: ``Ni침o``, ``Adulto`` y ``Persona Mayor``.
* El primer rango es para menores de ``18 a침os``.
* El segundo rango es para pasajeros entre ``18 y 60 a침os``
* El tercer rango es para pasajeros mayores de ``60 a침os``.
* Se representa en una gr치fica el n칰mero de pasajeros que hab칤a dentro de esos rangos de edades.
        """
        )
code = """
titanic['Pasajero']=None
titanic['Pasajero'].loc[titanic['Age']<18]='Ni침o/a'
titanic['Pasajero'].loc[(titanic['Age']>=18)&(titanic['Age']<60)]='Adulto/a'
titanic['Pasajero'].loc[titanic['Age']>=60]='Persona Mayor'
"""
st.code(code,language='python')

titanic['Pasajero']=None
titanic['Pasajero'].loc[titanic['Age']<18]='Ni침o/a'
titanic['Pasajero'].loc[(titanic['Age']>=18)&(titanic['Age']<60)]='Adulto/a'
titanic['Pasajero'].loc[titanic['Age']>=60]='Persona Mayor'

pasajeros=titanic.groupby('Pasajero')['Pasajero'].value_counts().reset_index()
fig7=px.histogram(pasajeros, x="Pasajero", y="count", color="Pasajero",labels={'Pasajero':'Rango de Edad','count':'N칰mero de Pasajeros'})
fig7.update_layout(height=500, width=800, title_text="Distribuci칩n de pasajeros", 
                  template='plotly_dark')

st.plotly_chart(fig7)

st.markdown(
            """
La mayor parte de los pasajeros, es decir, m치s del ``80%`` se encontraban dentro del rango de edad de entre ``18`` y ``60`` a침os. Por otro lado, menos del ``15%`` estaban comprendidos dentro del rango de edad de menores de ``18`` a침os y el resto, eran mayores de ``60`` a침os.
        """
        )
#--------------N칰mero de pasajeros en funci칩n de la edad--------------#



#--------------Proporci칩n de pasajeros seg칰n su t칤tulo--------------#
st.markdown(
            """
            ## Proporci칩n de pasajeros seg칰n su t칤tulo
        """
        )
st.markdown(
            """
Procedimiento:
* Se ha creado una nueva columna llamada `T칤tulo`.
* Esta columna recoje los t칤tulos de los pasajeros, presentes en el nombre, justo despu칠s del apellido.
* Se ha creado una gr치fica donde se representa el n칰mero de pasajeros que ten칤an los t칤tulos encontrados.
* En la segunda gr치fica se han distribu칤do los t칤tulos segun los diferentes niveles del barco.
        """
        )
code = """
titanic['T칤tulo']=titanic['MarriedName'].str.split('[,|.]', regex=True).str[1]
titanic=titanic[['PassengerId', 'Survived', 'Pclass','Pasajero','T칤tulo', 'MarriedName', 'FullName', 'Sex',
       'Age', 'SibSp', 'Parch', 'Ticket', 'Fare', 'Cabin', 'Level', 'Embarked']]
"""
st.code(code,language='python')

titanic['T칤tulo']=titanic['MarriedName'].str.split('[,|.]', regex=True).str[1]
titanic=titanic[['PassengerId', 'Survived', 'Pclass','Pasajero','T칤tulo', 'MarriedName', 'FullName', 'Sex',
       'Age', 'SibSp', 'Parch', 'Ticket', 'Fare', 'Cabin', 'Level', 'Embarked']]

col1,col2 =st.columns(2)
with col1:
    titulos=titanic.groupby('T칤tulo')['T칤tulo'].value_counts()
    titulos_pct=pd.DataFrame(titulos.apply(lambda x:(x*100)/titulos.sum())).reset_index()
    fig8=px.histogram(titulos_pct, x="T칤tulo", y="count", color="T칤tulo",labels={'T칤tulo':'T칤tulo del pasajero','count':'N칰mero de Pasajeros'})
    fig8.update_layout(height=650, width=800, title_text="Distribuci칩n de pasajeros por t칤tulos", 
                  template='plotly_dark')
    st.plotly_chart(fig8)

with col2:
    titulos_level=titanic.groupby('Level')['T칤tulo'].value_counts()
    titulos_level_pct=pd.DataFrame(titulos_level.apply(lambda x:(x*100)/titulos_level.sum())).reset_index()
    fig9=px.histogram(titulos_level_pct, x="count", y="Level", color="T칤tulo", labels={'Level':'Nivel del barco','count':'Porcentaje de Pasajeros'},barmode='group',orientation='h')
    fig9.update_layout(height=1000, width=1200, title_text="Distribuci칩n de pasajeros por t칤tulos y nivel", 
                  template='plotly_dark')
    st.plotly_chart(fig9)

st.markdown(
            """
De las siguientes gr치ficas se han podido observar los siguientes datos:
* M치s de un ``58%`` de los t칤tulos pertenecientes a los pasajeros del barco eran Mr.
* Hab칤a un mayor porcentaje de ``mujeres solteras`` en el barco, que pose칤an el t칤tulo Miss.
* Algunos de los t칤tulos minoritarios presentes en la gr치fica, hacen referencia a gente de ``primera clase``.
* La mayor칤a de estos t칤tulos minoritarios se alojaban en el nivel `B` y `C`, donde se encontraban las cabinas de lujo del barco.
        """
        )

#--------------Proporci칩n de pasajeros seg칰n su t칤tulo--------------#



#--------------Fallecidos vs Supervivientes--------------#
st.markdown(
            """
            ## Fallecidos vs Supervivientes
        """
        )
st.markdown(
            """
Procedimiento:
* Se ha creado una nueva columna llamada `Estado`.
* Esta columna contiene variables categ칩ricas que se corresponden con `Fallecido` si en la columna ``Survived`` hay un 0 y ``Sobrevivi칩``, si hay un 1.
* Se ha representado el porcentaje de pasajeros que sobrevivi칩 y falleci칩 en el barco.
* Se ha representado el pocentaje de fallecidos seg칰n las diferentes clases dentro del barco.
* Se ha representado el porcentaje de fallecidos seg칰n el g칠nero de los pasajeros.
* Se ha representado el porcentaje de fallecidos seg칰n el rango de edades.
        """
        )
code = """
titanic['Estado']=None
titanic['Estado'].loc[titanic['Survived']==0]='Fallecido/a'
titanic['Estado'].loc[titanic['Survived']==1]='Sobrevivi칩'
titanic=titanic[['PassengerId', 'Survived','Estado', 'Pclass', 'Pasajero', 'T칤tulo',
       'MarriedName', 'FullName', 'Sex', 'Age', 'SibSp', 'Parch', 'Ticket',
       'Fare', 'Cabin', 'Level', 'Embarked']]
"""
st.code(code,language='python')

titanic['Estado']=None
titanic['Estado'].loc[titanic['Survived']==0]='Fallecido/a'
titanic['Estado'].loc[titanic['Survived']==1]='Sobrevivi칩'
titanic=titanic[['PassengerId', 'Survived','Estado', 'Pclass', 'Pasajero', 'T칤tulo',
       'MarriedName', 'FullName', 'Sex', 'Age', 'SibSp', 'Parch', 'Ticket',
       'Fare', 'Cabin', 'Level', 'Embarked']]


col1,col2 =st.columns(2)
with col1:
    bajas=titanic.groupby('Estado')['Estado'].value_counts()
    bajas_pct=pd.DataFrame(bajas.apply(lambda x:(x*100)/bajas.sum())).reset_index()
    fig10=px.histogram(bajas_pct, x="Estado", y="count", color="Estado",labels={'Estado':'Estado de los pasajeros tras Titanic','count':'Porcentaje de Pasajeros'})
    fig10.update_layout(height=650, width=800, title_text="Distribuci칩n del estado de pasajeros", 
                  template='plotly_dark')
    st.plotly_chart(fig10)

with col2:
    bajas_clases=titanic.groupby('Pclass')['Estado'].value_counts()
    bajas_clases_pct=pd.DataFrame(bajas_clases.apply(lambda x:(x*100)/bajas_clases.sum())).reset_index()
    fig11=px.histogram(bajas_clases_pct, x="Estado", y="count", color="Pclass",labels={'Estado':'Estado de los pasajeros tras Titanic','count':'Porcentaje de Pasajeros'},barmode='group')
    fig11.update_layout(height=650, width=800, title_text="Distribuci칩n del estado de pasajeros", 
                  template='plotly_dark')
    st.plotly_chart(fig11)

col3,col4 =st.columns(2)
with col3:
    estado_genero=titanic.groupby('Sex')['Estado'].value_counts()
    estado_genero_pct=pd.DataFrame(estado_genero.apply(lambda x:(x*100)/estado_genero.sum())).reset_index()
    fig12=px.histogram(estado_genero_pct, x="Sex", y="count", color="Estado", labels={'Sex':'G칠nero del Pasajero','count':'Porcentaje de Pasajeros'},barmode='group',orientation='v')
    fig12.update_layout(height=500, width=800, title_text="Distribuci칩n de pasajeros por estado y g칠nero", 
                  template='plotly_dark')
    st.plotly_chart(fig12)

with col4:
    estado_pasajero=titanic.groupby('Pasajero')['Estado'].value_counts()
    estado_pasajero_pct=pd.DataFrame(estado_pasajero.apply(lambda x:(x*100)/estado_pasajero.sum())).reset_index()
    fig13=px.histogram(estado_pasajero_pct, x="Pasajero", y="count", color="Estado", labels={'Sex':'G칠nero del Pasajero','count':'Porcentaje de Pasajeros'},barmode='group',orientation='v')
    fig13.update_layout(height=500, width=800, title_text="Distribuci칩n de pasajeros por estado y g칠nero", 
                  template='plotly_dark')
    st.plotly_chart(fig13)

st.markdown(
            """
De las siguientes gr치ficas se ha podido observar los siguientes datos:
* Un ``62%`` de los pasajeros fallecieron.
* S칩lo el ``42%`` de ellos pertenec칤an a tercera clase, mientras que los pasajeros con un ``mayor porcentaje de superviviencia`` eran de primera clase.
* Un ``52%`` de pasajeros fallecidos con respecto al total eran hombres, mientras que el ``mayor porcentaje de supervivencia`` correspondi칩 a las mujeres.
* Dentro del rango de mayores de 60, fallecieron ``19 personas`` de 26 pasajeros en total..
* M치s de un ``6% de los fallecidos`` estaban dentro del rango de edad de menores de 18 a침os, lo cu치l equivale a 54 pasajeros de 121 pasajeros considerados en ese rango.
    """
        )
#--------------Fallecidos vs Supervivientes--------------#



#--------------Pasajeros que vaiajron solos vs acompa침ados--------------#
st.markdown(
            """
            ## Pasajeros que viajaron solos vs acompa침ados
        """
        )
st.markdown(
            """
Procedimiento:
* Se ha creado una columna nueva llamada `Acompa침amiento`, para determinar si los pasajeros viajaban o no con familia.
* Si `SibSp` y `Parch` es cero, se ha determinado que los pasajeros viajaban solos, mientras que si alguna de esas variables eran mayores que cero, viajaban con familia.
* Se ha representado el porcentaje de pasajeros en funci칩n de si viajaban solos o no.
* Se ha representado el porcentaje de pasajeros acompa침ados, agrupados por aquellos que fallecieron o sobrevivieron.
* Se ha representado el porcentaje de pasajeros acompa침ados, agrupados por g칠nero.
* Se ha representado el porcentaje de pasajeros acompa침ados, agrupados por clase.
        """
        )
code = """
titanic['Acompa침amiento']=None
titanic['Acompa침amiento'].loc[(titanic['SibSp']==0)&(titanic['Parch']==0)]='Viaja Solo/a'
titanic['Acompa침amiento'].loc[(titanic['SibSp']>0)|(titanic['Parch']>0)]='Viaja Acompa침ado/a'
titanic=titanic[['PassengerId', 'Survived','Estado', 'Pclass', 'Pasajero', 'T칤tulo',
       'MarriedName', 'FullName', 'Sex', 'Age', 'SibSp', 'Parch', 'Acompa침amiento', 'Ticket',
       'Fare', 'Cabin', 'Level', 'Embarked']]
"""
st.code(code,language='python')

titanic['Acompa침amiento']=None
titanic['Acompa침amiento'].loc[(titanic['SibSp']==0)&(titanic['Parch']==0)]='Viaja Solo/a'
titanic['Acompa침amiento'].loc[(titanic['SibSp']>0)|(titanic['Parch']>0)]='Viaja Acompa침ado/a'
titanic=titanic[['PassengerId', 'Survived','Estado', 'Pclass', 'Pasajero', 'T칤tulo',
       'MarriedName', 'FullName', 'Sex', 'Age', 'SibSp', 'Parch', 'Acompa침amiento', 'Ticket',
       'Fare', 'Cabin', 'Level', 'Embarked']]


col1,col2 =st.columns(2)
with col1:
    familias=titanic.groupby('Acompa침amiento')['Acompa침amiento'].value_counts()
    familias_pct=pd.DataFrame(familias.apply(lambda x:(x*100)/familias.sum())).reset_index()
    fig14=px.histogram(familias_pct, x="Acompa침amiento", y="count", color="Acompa침amiento",labels={'Acompa침amiento':'Pasajeros que viajaron solos o acompa침ados','count':'Porcentaje de Pasajeros'})
    fig14.update_layout(height=500, width=800, title_text="Distribuci칩n de pasajeros", 
                  template='plotly_dark')
    st.plotly_chart(fig14)

with col2:
    estado_familias=titanic.groupby('Estado')['Acompa침amiento'].value_counts()
    estado_familias_pct=pd.DataFrame(estado_familias.apply(lambda x:(x*100)/estado_familias.sum())).reset_index()
    fig15=px.histogram(estado_familias_pct, x="Acompa침amiento", y="count", color="Estado", labels={'Acompa침amiento':'Pasajeros que viajaron solos o acompa침ados','count':'Porcentaje de Pasajeros'},barmode='group',orientation='v')
    fig15.update_layout(height=500, width=800, title_text="Distribuci칩n de pasajeros", 
                  template='plotly_dark')
    st.plotly_chart(fig15)

col3,col4 =st.columns(2)
with col3:
    genero_familias=titanic.groupby('Sex')['Acompa침amiento'].value_counts()
    genero_familias_pct=pd.DataFrame(genero_familias.apply(lambda x:(x*100)/genero_familias.sum())).reset_index()
    fig16=px.histogram(genero_familias_pct, x="Acompa침amiento", y="count", color="Sex", labels={'Acompa침amiento':'Pasajeros que viajaron solos o acompa침ados','count':'Porcentaje de Pasajeros'},barmode='group',orientation='v')
    fig16.update_layout(height=500, width=800, title_text="Distribuci칩n de pasajeros", 
                  template='plotly_dark')
    st.plotly_chart(fig16)

with col4:
    clases_familias=titanic.groupby('Pclass')['Acompa침amiento'].value_counts()
    clases_familias_pct=pd.DataFrame(clases_familias.apply(lambda x:(x*100)/clases_familias.sum())).reset_index()
    fig17=px.histogram(clases_familias_pct, x="Acompa침amiento", y="count", color="Pclass", labels={'Acompa침amiento':'Pasajeros que viajaron solos o acompa침ados','count':'Porcentaje de Pasajeros'},barmode='group',orientation='v')
    fig17.update_layout(height=500, width=800, title_text="Distribuci칩n de pasajeros", 
                  template='plotly_dark')
    st.plotly_chart(fig17)

st.markdown(
            """
De las siguientes gr치ficas se ha podido observar:
* Un ``60%`` de los pasajeros que viajaban en Titanic no estaban acompa침ados por su familia.
* De ellos, el ``42%`` falleci칩.
* De los pasajeros que viajaban con familia, la mitad consigui칩 sobrevivir y la otra falleci칩.
* M치s de la mitad de pasajeros que viajaban en familia eran mujeres.
* S칩lo un ``14%`` de las mujeres sobre los pasajeros totales viajaban solas.
    """
        )
#--------------Pasajeros que vaiajron solos vs acompa침ados--------------#



#--------------Correlaciones entre variables--------------#
st.markdown(
            """
            ## Correlaciones entre variables
        """
        )
st.markdown(
            """
Procedimiento:
* Se han codificado las variables categ칩ricas del DataFrame mediante ``LabelEncoder()``, para obtener las correlaciones entre variables.
* Se ha hecho uso de un mapa de calor para representar dichas correlaciones.
        """
        )
code = """
titanic_corr=titanic[['Survived', 'Pclass', 'Pasajero', 'T칤tulo',
       'MarriedName', 'FullName', 'Sex', 'Age', 'SibSp', 'Parch',
       'Acompa침amiento', 'Ticket', 'Fare', 'Level', 'Embarked']].copy()
le = LabelEncoder()
titanic_corr['Pasajero'] = le.fit_transform(titanic_corr['Pasajero'])
titanic_corr['T칤tulo'] = le.fit_transform(titanic_corr['T칤tulo'])
titanic_corr['Sex'] = le.fit_transform(titanic_corr['Sex'])
titanic_corr['MarriedName'] = le.fit_transform(titanic_corr['MarriedName'])
titanic_corr['FullName'] = le.fit_transform(titanic_corr['FullName'])
titanic_corr['Acompa침amiento'] = le.fit_transform(titanic_corr['Acompa침amiento'])
titanic_corr['Ticket'] = le.fit_transform(titanic_corr['Ticket'])
titanic_corr['Level'] = le.fit_transform(titanic_corr['Level'])
titanic_corr['Embarked']  = le.fit_transform(titanic_corr['Embarked'])
"""
st.code(code,language='python')

titanic_corr=titanic[['Survived', 'Pclass', 'Pasajero', 'T칤tulo',
       'MarriedName', 'FullName', 'Sex', 'Age', 'SibSp', 'Parch',
       'Acompa침amiento', 'Ticket', 'Fare', 'Level', 'Embarked']].copy()
le = LabelEncoder()
titanic_corr['Pasajero'] = le.fit_transform(titanic_corr['Pasajero'])
titanic_corr['T칤tulo'] = le.fit_transform(titanic_corr['T칤tulo'])
titanic_corr['Sex'] = le.fit_transform(titanic_corr['Sex'])
titanic_corr['MarriedName'] = le.fit_transform(titanic_corr['MarriedName'])
titanic_corr['FullName'] = le.fit_transform(titanic_corr['FullName'])
titanic_corr['Acompa침amiento'] = le.fit_transform(titanic_corr['Acompa침amiento'])
titanic_corr['Ticket'] = le.fit_transform(titanic_corr['Ticket'])
titanic_corr['Level'] = le.fit_transform(titanic_corr['Level'])
titanic_corr['Embarked']  = le.fit_transform(titanic_corr['Embarked'])

corr=titanic_corr.corr()
fig18 = go.Figure(data=go.Heatmap(z=corr.values, x=corr.columns, y=corr.columns))
fig18.update_layout(
    width=800,
    height=800,
    title='Mapa de calor',
    template='plotly_dark'
)
st.plotly_chart(fig18)

st.markdown(
            """
Correlaciones significativas entre variables:
* Hay una correlaci칩n significativa de `` 0.95 `` entre la clase de los pasajeros y el nivel del barco donde se alojaban.
* Hay una correlaci칩n significativa de `` 0.55 `` entre la clase de los pasajeros, el nivel del barco donde se alojaban y el precio pagado por el billete.
* Hay una correlaci칩n significativa de `` 0.55 `` entre el g칠nero y la supervivencia de los pasajeros.
* Para el resto de variables parece no haber una relaci칩n significativa lineal entre ellas.
        """
        )

#--------------Correlaciones entre variables--------------#

